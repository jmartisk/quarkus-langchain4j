// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: milvus.proto
package io.milvus.grpc;

/**
 * Protobuf type {@code milvus.proto.milvus.ResourceGroup}
 */
public final class ResourceGroup extends com.google.protobuf.GeneratedMessageV3 implements // @@protoc_insertion_point(message_implements:milvus.proto.milvus.ResourceGroup)
        ResourceGroupOrBuilder {

    private static final long serialVersionUID = 0L;

    // Use ResourceGroup.newBuilder() to construct.
    private ResourceGroup(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private ResourceGroup() {
        name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({ "unused" })
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
        return new ResourceGroup();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_descriptor;
    }

    @SuppressWarnings({ "rawtypes" })
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(int number) {
        switch (number) {
            case 4:
                return internalGetNumLoadedReplica();
            case 5:
                return internalGetNumOutgoingNode();
            case 6:
                return internalGetNumIncomingNode();
            default:
                throw new RuntimeException("Invalid map field number: " + number);
        }
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_fieldAccessorTable
                .ensureFieldAccessorsInitialized(io.milvus.grpc.ResourceGroup.class,
                        io.milvus.grpc.ResourceGroup.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";

    /**
     * <code>string name = 1;</code>
     *
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
        }
    }

    /**
     * <code>string name = 1;</code>
     *
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            name_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }

    public static final int CAPACITY_FIELD_NUMBER = 2;

    private int capacity_ = 0;

    /**
     * <code>int32 capacity = 2;</code>
     *
     * @return The capacity.
     */
    @java.lang.Override
    public int getCapacity() {
        return capacity_;
    }

    public static final int NUM_AVAILABLE_NODE_FIELD_NUMBER = 3;

    private int numAvailableNode_ = 0;

    /**
     * <code>int32 num_available_node = 3;</code>
     *
     * @return The numAvailableNode.
     */
    @java.lang.Override
    public int getNumAvailableNode() {
        return numAvailableNode_;
    }

    public static final int NUM_LOADED_REPLICA_FIELD_NUMBER = 4;

    private static final class NumLoadedReplicaDefaultEntryHolder {

        static final com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> defaultEntry = com.google.protobuf.MapEntry.<java.lang.String, java.lang.Integer> newDefaultInstance(
                io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_NumLoadedReplicaEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING, "", com.google.protobuf.WireFormat.FieldType.INT32, 0);
    }

    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> numLoadedReplica_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetNumLoadedReplica() {
        if (numLoadedReplica_ == null) {
            return com.google.protobuf.MapField.emptyMapField(NumLoadedReplicaDefaultEntryHolder.defaultEntry);
        }
        return numLoadedReplica_;
    }

    public int getNumLoadedReplicaCount() {
        return internalGetNumLoadedReplica().getMap().size();
    }

    /**
     * <pre>
     * collection name -&gt; loaded replica num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
     */
    @java.lang.Override
    public boolean containsNumLoadedReplica(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        return internalGetNumLoadedReplica().getMap().containsKey(key);
    }

    /**
     * Use {@link #getNumLoadedReplicaMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNumLoadedReplica() {
        return getNumLoadedReplicaMap();
    }

    /**
     * <pre>
     * collection name -&gt; loaded replica num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getNumLoadedReplicaMap() {
        return internalGetNumLoadedReplica().getMap();
    }

    /**
     * <pre>
     * collection name -&gt; loaded replica num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
     */
    @java.lang.Override
    public int getNumLoadedReplicaOrDefault(java.lang.String key, int defaultValue) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumLoadedReplica().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     * <pre>
     * collection name -&gt; loaded replica num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
     */
    @java.lang.Override
    public int getNumLoadedReplicaOrThrow(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumLoadedReplica().getMap();
        if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
    }

    public static final int NUM_OUTGOING_NODE_FIELD_NUMBER = 5;

    private static final class NumOutgoingNodeDefaultEntryHolder {

        static final com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> defaultEntry = com.google.protobuf.MapEntry.<java.lang.String, java.lang.Integer> newDefaultInstance(
                io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_NumOutgoingNodeEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING, "", com.google.protobuf.WireFormat.FieldType.INT32, 0);
    }

    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> numOutgoingNode_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetNumOutgoingNode() {
        if (numOutgoingNode_ == null) {
            return com.google.protobuf.MapField.emptyMapField(NumOutgoingNodeDefaultEntryHolder.defaultEntry);
        }
        return numOutgoingNode_;
    }

    public int getNumOutgoingNodeCount() {
        return internalGetNumOutgoingNode().getMap().size();
    }

    /**
     * <pre>
     * collection name -&gt; accessed other rg's node num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
     */
    @java.lang.Override
    public boolean containsNumOutgoingNode(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        return internalGetNumOutgoingNode().getMap().containsKey(key);
    }

    /**
     * Use {@link #getNumOutgoingNodeMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNumOutgoingNode() {
        return getNumOutgoingNodeMap();
    }

    /**
     * <pre>
     * collection name -&gt; accessed other rg's node num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getNumOutgoingNodeMap() {
        return internalGetNumOutgoingNode().getMap();
    }

    /**
     * <pre>
     * collection name -&gt; accessed other rg's node num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
     */
    @java.lang.Override
    public int getNumOutgoingNodeOrDefault(java.lang.String key, int defaultValue) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumOutgoingNode().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     * <pre>
     * collection name -&gt; accessed other rg's node num
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
     */
    @java.lang.Override
    public int getNumOutgoingNodeOrThrow(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumOutgoingNode().getMap();
        if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
    }

    public static final int NUM_INCOMING_NODE_FIELD_NUMBER = 6;

    private static final class NumIncomingNodeDefaultEntryHolder {

        static final com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> defaultEntry = com.google.protobuf.MapEntry.<java.lang.String, java.lang.Integer> newDefaultInstance(
                io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_NumIncomingNodeEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING, "", com.google.protobuf.WireFormat.FieldType.INT32, 0);
    }

    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> numIncomingNode_;

    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetNumIncomingNode() {
        if (numIncomingNode_ == null) {
            return com.google.protobuf.MapField.emptyMapField(NumIncomingNodeDefaultEntryHolder.defaultEntry);
        }
        return numIncomingNode_;
    }

    public int getNumIncomingNodeCount() {
        return internalGetNumIncomingNode().getMap().size();
    }

    /**
     * <pre>
     * collection name -&gt; be accessed node num by other rg
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
     */
    @java.lang.Override
    public boolean containsNumIncomingNode(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        return internalGetNumIncomingNode().getMap().containsKey(key);
    }

    /**
     * Use {@link #getNumIncomingNodeMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getNumIncomingNode() {
        return getNumIncomingNodeMap();
    }

    /**
     * <pre>
     * collection name -&gt; be accessed node num by other rg
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getNumIncomingNodeMap() {
        return internalGetNumIncomingNode().getMap();
    }

    /**
     * <pre>
     * collection name -&gt; be accessed node num by other rg
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
     */
    @java.lang.Override
    public int getNumIncomingNodeOrDefault(java.lang.String key, int defaultValue) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumIncomingNode().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
    }

    /**
     * <pre>
     * collection name -&gt; be accessed node num by other rg
     * </pre>
     *
     * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
     */
    @java.lang.Override
    public int getNumIncomingNodeOrThrow(java.lang.String key) {
        if (key == null) {
            throw new NullPointerException("map key");
        }
        java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumIncomingNode().getMap();
        if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1)
            return true;
        if (isInitialized == 0)
            return false;
        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (capacity_ != 0) {
            output.writeInt32(2, capacity_);
        }
        if (numAvailableNode_ != 0) {
            output.writeInt32(3, numAvailableNode_);
        }
        com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(output, internalGetNumLoadedReplica(),
                NumLoadedReplicaDefaultEntryHolder.defaultEntry, 4);
        com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(output, internalGetNumOutgoingNode(),
                NumOutgoingNodeDefaultEntryHolder.defaultEntry, 5);
        com.google.protobuf.GeneratedMessageV3.serializeStringMapTo(output, internalGetNumIncomingNode(),
                NumIncomingNodeDefaultEntryHolder.defaultEntry, 6);
        getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1)
            return size;
        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (capacity_ != 0) {
            size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, capacity_);
        }
        if (numAvailableNode_ != 0) {
            size += com.google.protobuf.CodedOutputStream.computeInt32Size(3, numAvailableNode_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry : internalGetNumLoadedReplica().getMap()
                .entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> numLoadedReplica__ = NumLoadedReplicaDefaultEntryHolder.defaultEntry
                    .newBuilderForType().setKey(entry.getKey()).setValue(entry.getValue()).build();
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, numLoadedReplica__);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry : internalGetNumOutgoingNode().getMap()
                .entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> numOutgoingNode__ = NumOutgoingNodeDefaultEntryHolder.defaultEntry
                    .newBuilderForType().setKey(entry.getKey()).setValue(entry.getValue()).build();
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, numOutgoingNode__);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry : internalGetNumIncomingNode().getMap()
                .entrySet()) {
            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> numIncomingNode__ = NumIncomingNodeDefaultEntryHolder.defaultEntry
                    .newBuilderForType().setKey(entry.getKey()).setValue(entry.getValue()).build();
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(6, numIncomingNode__);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof io.milvus.grpc.ResourceGroup)) {
            return super.equals(obj);
        }
        io.milvus.grpc.ResourceGroup other = (io.milvus.grpc.ResourceGroup) obj;
        if (!getName().equals(other.getName()))
            return false;
        if (getCapacity() != other.getCapacity())
            return false;
        if (getNumAvailableNode() != other.getNumAvailableNode())
            return false;
        if (!internalGetNumLoadedReplica().equals(other.internalGetNumLoadedReplica()))
            return false;
        if (!internalGetNumOutgoingNode().equals(other.internalGetNumOutgoingNode()))
            return false;
        if (!internalGetNumIncomingNode().equals(other.internalGetNumIncomingNode()))
            return false;
        if (!getUnknownFields().equals(other.getUnknownFields()))
            return false;
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
        hash = (53 * hash) + getCapacity();
        hash = (37 * hash) + NUM_AVAILABLE_NODE_FIELD_NUMBER;
        hash = (53 * hash) + getNumAvailableNode();
        if (!internalGetNumLoadedReplica().getMap().isEmpty()) {
            hash = (37 * hash) + NUM_LOADED_REPLICA_FIELD_NUMBER;
            hash = (53 * hash) + internalGetNumLoadedReplica().hashCode();
        }
        if (!internalGetNumOutgoingNode().getMap().isEmpty()) {
            hash = (37 * hash) + NUM_OUTGOING_NODE_FIELD_NUMBER;
            hash = (53 * hash) + internalGetNumOutgoingNode().hashCode();
        }
        if (!internalGetNumIncomingNode().getMap().isEmpty()) {
            hash = (37 * hash) + NUM_INCOMING_NODE_FIELD_NUMBER;
            hash = (53 * hash) + internalGetNumIncomingNode().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.milvus.grpc.ResourceGroup parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static io.milvus.grpc.ResourceGroup parseDelimitedFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static io.milvus.grpc.ResourceGroup parseFrom(com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(io.milvus.grpc.ResourceGroup prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * Protobuf type {@code milvus.proto.milvus.ResourceGroup}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements // @@protoc_insertion_point(builder_implements:milvus.proto.milvus.ResourceGroup)
            io.milvus.grpc.ResourceGroupOrBuilder {

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_descriptor;
        }

        @SuppressWarnings({ "rawtypes" })
        protected com.google.protobuf.MapField internalGetMapField(int number) {
            switch (number) {
                case 4:
                    return internalGetNumLoadedReplica();
                case 5:
                    return internalGetNumOutgoingNode();
                case 6:
                    return internalGetNumIncomingNode();
                default:
                    throw new RuntimeException("Invalid map field number: " + number);
            }
        }

        @SuppressWarnings({ "rawtypes" })
        protected com.google.protobuf.MapField internalGetMutableMapField(int number) {
            switch (number) {
                case 4:
                    return internalGetMutableNumLoadedReplica();
                case 5:
                    return internalGetMutableNumOutgoingNode();
                case 6:
                    return internalGetMutableNumIncomingNode();
                default:
                    throw new RuntimeException("Invalid map field number: " + number);
            }
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(io.milvus.grpc.ResourceGroup.class,
                            io.milvus.grpc.ResourceGroup.Builder.class);
        }

        // Construct using io.milvus.grpc.ResourceGroup.newBuilder()
        private Builder() {
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            bitField0_ = 0;
            name_ = "";
            capacity_ = 0;
            numAvailableNode_ = 0;
            internalGetMutableNumLoadedReplica().clear();
            internalGetMutableNumOutgoingNode().clear();
            internalGetMutableNumIncomingNode().clear();
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return io.milvus.grpc.MilvusProto.internal_static_milvus_proto_milvus_ResourceGroup_descriptor;
        }

        @java.lang.Override
        public io.milvus.grpc.ResourceGroup getDefaultInstanceForType() {
            return io.milvus.grpc.ResourceGroup.getDefaultInstance();
        }

        @java.lang.Override
        public io.milvus.grpc.ResourceGroup build() {
            io.milvus.grpc.ResourceGroup result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public io.milvus.grpc.ResourceGroup buildPartial() {
            io.milvus.grpc.ResourceGroup result = new io.milvus.grpc.ResourceGroup(this);
            if (bitField0_ != 0) {
                buildPartial0(result);
            }
            onBuilt();
            return result;
        }

        private void buildPartial0(io.milvus.grpc.ResourceGroup result) {
            int from_bitField0_ = bitField0_;
            if (((from_bitField0_ & 0x00000001) != 0)) {
                result.name_ = name_;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
                result.capacity_ = capacity_;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
                result.numAvailableNode_ = numAvailableNode_;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
                result.numLoadedReplica_ = internalGetNumLoadedReplica();
                result.numLoadedReplica_.makeImmutable();
            }
            if (((from_bitField0_ & 0x00000010) != 0)) {
                result.numOutgoingNode_ = internalGetNumOutgoingNode();
                result.numOutgoingNode_.makeImmutable();
            }
            if (((from_bitField0_ & 0x00000020) != 0)) {
                result.numIncomingNode_ = internalGetNumIncomingNode();
                result.numIncomingNode_.makeImmutable();
            }
        }

        @java.lang.Override
        public Builder clone() {
            return super.clone();
        }

        @java.lang.Override
        public Builder setField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.setField(field, value);
        }

        @java.lang.Override
        public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
        }

        @java.lang.Override
        public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
        }

        @java.lang.Override
        public Builder setRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, int index,
                java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
        }

        @java.lang.Override
        public Builder addRepeatedField(com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return super.addRepeatedField(field, value);
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.milvus.grpc.ResourceGroup) {
                return mergeFrom((io.milvus.grpc.ResourceGroup) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(io.milvus.grpc.ResourceGroup other) {
            if (other == io.milvus.grpc.ResourceGroup.getDefaultInstance())
                return this;
            if (!other.getName().isEmpty()) {
                name_ = other.name_;
                bitField0_ |= 0x00000001;
                onChanged();
            }
            if (other.getCapacity() != 0) {
                setCapacity(other.getCapacity());
            }
            if (other.getNumAvailableNode() != 0) {
                setNumAvailableNode(other.getNumAvailableNode());
            }
            internalGetMutableNumLoadedReplica().mergeFrom(other.internalGetNumLoadedReplica());
            bitField0_ |= 0x00000008;
            internalGetMutableNumOutgoingNode().mergeFrom(other.internalGetNumOutgoingNode());
            bitField0_ |= 0x00000010;
            internalGetMutableNumIncomingNode().mergeFrom(other.internalGetNumIncomingNode());
            bitField0_ |= 0x00000020;
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            name_ = input.readStringRequireUtf8();
                            bitField0_ |= 0x00000001;
                            break;
                        }
                        // case 10
                        case 16: {
                            capacity_ = input.readInt32();
                            bitField0_ |= 0x00000002;
                            break;
                        }
                        // case 16
                        case 24: {
                            numAvailableNode_ = input.readInt32();
                            bitField0_ |= 0x00000004;
                            break;
                        }
                        // case 24
                        case 34: {
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> numLoadedReplica__ = input
                                    .readMessage(NumLoadedReplicaDefaultEntryHolder.defaultEntry.getParserForType(),
                                            extensionRegistry);
                            internalGetMutableNumLoadedReplica().getMutableMap().put(numLoadedReplica__.getKey(),
                                    numLoadedReplica__.getValue());
                            bitField0_ |= 0x00000008;
                            break;
                        }
                        // case 34
                        case 42: {
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> numOutgoingNode__ = input
                                    .readMessage(NumOutgoingNodeDefaultEntryHolder.defaultEntry.getParserForType(),
                                            extensionRegistry);
                            internalGetMutableNumOutgoingNode().getMutableMap().put(numOutgoingNode__.getKey(),
                                    numOutgoingNode__.getValue());
                            bitField0_ |= 0x00000010;
                            break;
                        }
                        // case 42
                        case 50: {
                            com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer> numIncomingNode__ = input
                                    .readMessage(NumIncomingNodeDefaultEntryHolder.defaultEntry.getParserForType(),
                                            extensionRegistry);
                            internalGetMutableNumIncomingNode().getMutableMap().put(numIncomingNode__.getKey(),
                                    numIncomingNode__.getValue());
                            bitField0_ |= 0x00000020;
                            break;
                        }
                        // case 50
                        default: {
                            if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                // was an endgroup tag
                                done = true;
                            }
                            break;
                        }
                    }
                    // switch (tag)
                }
                // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.unwrapIOException();
            } finally {
                onChanged();
            }
            // finally
            return this;
        }

        private int bitField0_;

        private java.lang.Object name_ = "";

        /**
         * <code>string name = 1;</code>
         *
         * @return The name.
         */
        public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                name_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <code>string name = 1;</code>
         *
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                name_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>string name = 1;</code>
         *
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            name_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
        }

        /**
         * <code>string name = 1;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearName() {
            name_ = getDefaultInstance().getName();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
            return this;
        }

        /**
         * <code>string name = 1;</code>
         *
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);
            name_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
        }

        private int capacity_;

        /**
         * <code>int32 capacity = 2;</code>
         *
         * @return The capacity.
         */
        @java.lang.Override
        public int getCapacity() {
            return capacity_;
        }

        /**
         * <code>int32 capacity = 2;</code>
         *
         * @param value The capacity to set.
         * @return This builder for chaining.
         */
        public Builder setCapacity(int value) {
            capacity_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
        }

        /**
         * <code>int32 capacity = 2;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearCapacity() {
            bitField0_ = (bitField0_ & ~0x00000002);
            capacity_ = 0;
            onChanged();
            return this;
        }

        private int numAvailableNode_;

        /**
         * <code>int32 num_available_node = 3;</code>
         *
         * @return The numAvailableNode.
         */
        @java.lang.Override
        public int getNumAvailableNode() {
            return numAvailableNode_;
        }

        /**
         * <code>int32 num_available_node = 3;</code>
         *
         * @param value The numAvailableNode to set.
         * @return This builder for chaining.
         */
        public Builder setNumAvailableNode(int value) {
            numAvailableNode_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
        }

        /**
         * <code>int32 num_available_node = 3;</code>
         *
         * @return This builder for chaining.
         */
        public Builder clearNumAvailableNode() {
            bitField0_ = (bitField0_ & ~0x00000004);
            numAvailableNode_ = 0;
            onChanged();
            return this;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> numLoadedReplica_;

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetNumLoadedReplica() {
            if (numLoadedReplica_ == null) {
                return com.google.protobuf.MapField.emptyMapField(NumLoadedReplicaDefaultEntryHolder.defaultEntry);
            }
            return numLoadedReplica_;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetMutableNumLoadedReplica() {
            if (numLoadedReplica_ == null) {
                numLoadedReplica_ = com.google.protobuf.MapField.newMapField(NumLoadedReplicaDefaultEntryHolder.defaultEntry);
            }
            if (!numLoadedReplica_.isMutable()) {
                numLoadedReplica_ = numLoadedReplica_.copy();
            }
            bitField0_ |= 0x00000008;
            onChanged();
            return numLoadedReplica_;
        }

        public int getNumLoadedReplicaCount() {
            return internalGetNumLoadedReplica().getMap().size();
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        @java.lang.Override
        public boolean containsNumLoadedReplica(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            return internalGetNumLoadedReplica().getMap().containsKey(key);
        }

        /**
         * Use {@link #getNumLoadedReplicaMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getNumLoadedReplica() {
            return getNumLoadedReplicaMap();
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.String, java.lang.Integer> getNumLoadedReplicaMap() {
            return internalGetNumLoadedReplica().getMap();
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        @java.lang.Override
        public int getNumLoadedReplicaOrDefault(java.lang.String key, int defaultValue) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumLoadedReplica().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        @java.lang.Override
        public int getNumLoadedReplicaOrThrow(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumLoadedReplica().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public Builder clearNumLoadedReplica() {
            bitField0_ = (bitField0_ & ~0x00000008);
            internalGetMutableNumLoadedReplica().getMutableMap().clear();
            return this;
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        public Builder removeNumLoadedReplica(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableNumLoadedReplica().getMutableMap().remove(key);
            return this;
        }

        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getMutableNumLoadedReplica() {
            bitField0_ |= 0x00000008;
            return internalGetMutableNumLoadedReplica().getMutableMap();
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        public Builder putNumLoadedReplica(java.lang.String key, int value) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableNumLoadedReplica().getMutableMap().put(key, value);
            bitField0_ |= 0x00000008;
            return this;
        }

        /**
         * <pre>
         * collection name -&gt; loaded replica num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_loaded_replica = 4;</code>
         */
        public Builder putAllNumLoadedReplica(java.util.Map<java.lang.String, java.lang.Integer> values) {
            internalGetMutableNumLoadedReplica().getMutableMap().putAll(values);
            bitField0_ |= 0x00000008;
            return this;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> numOutgoingNode_;

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetNumOutgoingNode() {
            if (numOutgoingNode_ == null) {
                return com.google.protobuf.MapField.emptyMapField(NumOutgoingNodeDefaultEntryHolder.defaultEntry);
            }
            return numOutgoingNode_;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetMutableNumOutgoingNode() {
            if (numOutgoingNode_ == null) {
                numOutgoingNode_ = com.google.protobuf.MapField.newMapField(NumOutgoingNodeDefaultEntryHolder.defaultEntry);
            }
            if (!numOutgoingNode_.isMutable()) {
                numOutgoingNode_ = numOutgoingNode_.copy();
            }
            bitField0_ |= 0x00000010;
            onChanged();
            return numOutgoingNode_;
        }

        public int getNumOutgoingNodeCount() {
            return internalGetNumOutgoingNode().getMap().size();
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        @java.lang.Override
        public boolean containsNumOutgoingNode(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            return internalGetNumOutgoingNode().getMap().containsKey(key);
        }

        /**
         * Use {@link #getNumOutgoingNodeMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getNumOutgoingNode() {
            return getNumOutgoingNodeMap();
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.String, java.lang.Integer> getNumOutgoingNodeMap() {
            return internalGetNumOutgoingNode().getMap();
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        @java.lang.Override
        public int getNumOutgoingNodeOrDefault(java.lang.String key, int defaultValue) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumOutgoingNode().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        @java.lang.Override
        public int getNumOutgoingNodeOrThrow(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumOutgoingNode().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public Builder clearNumOutgoingNode() {
            bitField0_ = (bitField0_ & ~0x00000010);
            internalGetMutableNumOutgoingNode().getMutableMap().clear();
            return this;
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        public Builder removeNumOutgoingNode(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableNumOutgoingNode().getMutableMap().remove(key);
            return this;
        }

        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getMutableNumOutgoingNode() {
            bitField0_ |= 0x00000010;
            return internalGetMutableNumOutgoingNode().getMutableMap();
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        public Builder putNumOutgoingNode(java.lang.String key, int value) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableNumOutgoingNode().getMutableMap().put(key, value);
            bitField0_ |= 0x00000010;
            return this;
        }

        /**
         * <pre>
         * collection name -&gt; accessed other rg's node num
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_outgoing_node = 5;</code>
         */
        public Builder putAllNumOutgoingNode(java.util.Map<java.lang.String, java.lang.Integer> values) {
            internalGetMutableNumOutgoingNode().getMutableMap().putAll(values);
            bitField0_ |= 0x00000010;
            return this;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> numIncomingNode_;

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetNumIncomingNode() {
            if (numIncomingNode_ == null) {
                return com.google.protobuf.MapField.emptyMapField(NumIncomingNodeDefaultEntryHolder.defaultEntry);
            }
            return numIncomingNode_;
        }

        private com.google.protobuf.MapField<java.lang.String, java.lang.Integer> internalGetMutableNumIncomingNode() {
            if (numIncomingNode_ == null) {
                numIncomingNode_ = com.google.protobuf.MapField.newMapField(NumIncomingNodeDefaultEntryHolder.defaultEntry);
            }
            if (!numIncomingNode_.isMutable()) {
                numIncomingNode_ = numIncomingNode_.copy();
            }
            bitField0_ |= 0x00000020;
            onChanged();
            return numIncomingNode_;
        }

        public int getNumIncomingNodeCount() {
            return internalGetNumIncomingNode().getMap().size();
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        @java.lang.Override
        public boolean containsNumIncomingNode(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            return internalGetNumIncomingNode().getMap().containsKey(key);
        }

        /**
         * Use {@link #getNumIncomingNodeMap()} instead.
         */
        @java.lang.Override
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getNumIncomingNode() {
            return getNumIncomingNodeMap();
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        @java.lang.Override
        public java.util.Map<java.lang.String, java.lang.Integer> getNumIncomingNodeMap() {
            return internalGetNumIncomingNode().getMap();
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        @java.lang.Override
        public int getNumIncomingNodeOrDefault(java.lang.String key, int defaultValue) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumIncomingNode().getMap();
            return map.containsKey(key) ? map.get(key) : defaultValue;
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        @java.lang.Override
        public int getNumIncomingNodeOrThrow(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            java.util.Map<java.lang.String, java.lang.Integer> map = internalGetNumIncomingNode().getMap();
            if (!map.containsKey(key)) {
                throw new java.lang.IllegalArgumentException();
            }
            return map.get(key);
        }

        public Builder clearNumIncomingNode() {
            bitField0_ = (bitField0_ & ~0x00000020);
            internalGetMutableNumIncomingNode().getMutableMap().clear();
            return this;
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        public Builder removeNumIncomingNode(java.lang.String key) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableNumIncomingNode().getMutableMap().remove(key);
            return this;
        }

        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Integer> getMutableNumIncomingNode() {
            bitField0_ |= 0x00000020;
            return internalGetMutableNumIncomingNode().getMutableMap();
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        public Builder putNumIncomingNode(java.lang.String key, int value) {
            if (key == null) {
                throw new NullPointerException("map key");
            }
            internalGetMutableNumIncomingNode().getMutableMap().put(key, value);
            bitField0_ |= 0x00000020;
            return this;
        }

        /**
         * <pre>
         * collection name -&gt; be accessed node num by other rg
         * </pre>
         *
         * <code>map&lt;string, int32&gt; num_incoming_node = 6;</code>
         */
        public Builder putAllNumIncomingNode(java.util.Map<java.lang.String, java.lang.Integer> values) {
            internalGetMutableNumIncomingNode().getMutableMap().putAll(values);
            bitField0_ |= 0x00000020;
            return this;
        }

        @java.lang.Override
        public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }
        // @@protoc_insertion_point(builder_scope:milvus.proto.milvus.ResourceGroup)
    }

    // @@protoc_insertion_point(class_scope:milvus.proto.milvus.ResourceGroup)
    private static final io.milvus.grpc.ResourceGroup DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new io.milvus.grpc.ResourceGroup();
    }

    public static io.milvus.grpc.ResourceGroup getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ResourceGroup> PARSER = new com.google.protobuf.AbstractParser<ResourceGroup>() {

        @java.lang.Override
        public ResourceGroup parsePartialFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
                builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
        }
    };

    public static com.google.protobuf.Parser<ResourceGroup> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ResourceGroup> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public io.milvus.grpc.ResourceGroup getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }
}
