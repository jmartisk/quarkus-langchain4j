// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: milvus.proto
package io.milvus.grpc;

public interface DeleteRequestOrBuilder extends // @@protoc_insertion_point(interface_extends:milvus.proto.milvus.DeleteRequest)
        com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.milvus.proto.common.MsgBase base = 1;</code>
     *
     * @return Whether the base field is set.
     */
    boolean hasBase();

    /**
     * <code>.milvus.proto.common.MsgBase base = 1;</code>
     *
     * @return The base.
     */
    io.milvus.grpc.MsgBase getBase();

    /**
     * <code>.milvus.proto.common.MsgBase base = 1;</code>
     */
    io.milvus.grpc.MsgBaseOrBuilder getBaseOrBuilder();

    /**
     * <code>string db_name = 2;</code>
     *
     * @return The dbName.
     */
    java.lang.String getDbName();

    /**
     * <code>string db_name = 2;</code>
     *
     * @return The bytes for dbName.
     */
    com.google.protobuf.ByteString getDbNameBytes();

    /**
     * <code>string collection_name = 3;</code>
     *
     * @return The collectionName.
     */
    java.lang.String getCollectionName();

    /**
     * <code>string collection_name = 3;</code>
     *
     * @return The bytes for collectionName.
     */
    com.google.protobuf.ByteString getCollectionNameBytes();

    /**
     * <code>string partition_name = 4;</code>
     *
     * @return The partitionName.
     */
    java.lang.String getPartitionName();

    /**
     * <code>string partition_name = 4;</code>
     *
     * @return The bytes for partitionName.
     */
    com.google.protobuf.ByteString getPartitionNameBytes();

    /**
     * <code>string expr = 5;</code>
     *
     * @return The expr.
     */
    java.lang.String getExpr();

    /**
     * <code>string expr = 5;</code>
     *
     * @return The bytes for expr.
     */
    com.google.protobuf.ByteString getExprBytes();

    /**
     * <code>repeated uint32 hash_keys = 6;</code>
     *
     * @return A list containing the hashKeys.
     */
    java.util.List<java.lang.Integer> getHashKeysList();

    /**
     * <code>repeated uint32 hash_keys = 6;</code>
     *
     * @return The count of hashKeys.
     */
    int getHashKeysCount();

    /**
     * <code>repeated uint32 hash_keys = 6;</code>
     *
     * @param index The index of the element to return.
     * @return The hashKeys at the given index.
     */
    int getHashKeys(int index);
}
