// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: milvus.proto
package io.milvus.grpc;

public interface ShardReplicaOrBuilder extends // @@protoc_insertion_point(interface_extends:milvus.proto.milvus.ShardReplica)
        com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 leaderID = 1;</code>
     *
     * @return The leaderID.
     */
    long getLeaderID();

    /**
     * <pre>
     * IP:port
     * </pre>
     *
     * <code>string leader_addr = 2;</code>
     *
     * @return The leaderAddr.
     */
    java.lang.String getLeaderAddr();

    /**
     * <pre>
     * IP:port
     * </pre>
     *
     * <code>string leader_addr = 2;</code>
     *
     * @return The bytes for leaderAddr.
     */
    com.google.protobuf.ByteString getLeaderAddrBytes();

    /**
     * <code>string dm_channel_name = 3;</code>
     *
     * @return The dmChannelName.
     */
    java.lang.String getDmChannelName();

    /**
     * <code>string dm_channel_name = 3;</code>
     *
     * @return The bytes for dmChannelName.
     */
    com.google.protobuf.ByteString getDmChannelNameBytes();

    /**
     * <pre>
     * optional, DO NOT save it in meta, set it only for GetReplicas()
     * if with_shard_nodes is true
     * </pre>
     *
     * <code>repeated int64 node_ids = 4;</code>
     *
     * @return A list containing the nodeIds.
     */
    java.util.List<java.lang.Long> getNodeIdsList();

    /**
     * <pre>
     * optional, DO NOT save it in meta, set it only for GetReplicas()
     * if with_shard_nodes is true
     * </pre>
     *
     * <code>repeated int64 node_ids = 4;</code>
     *
     * @return The count of nodeIds.
     */
    int getNodeIdsCount();

    /**
     * <pre>
     * optional, DO NOT save it in meta, set it only for GetReplicas()
     * if with_shard_nodes is true
     * </pre>
     *
     * <code>repeated int64 node_ids = 4;</code>
     *
     * @param index The index of the element to return.
     * @return The nodeIds at the given index.
     */
    long getNodeIds(int index);
}
