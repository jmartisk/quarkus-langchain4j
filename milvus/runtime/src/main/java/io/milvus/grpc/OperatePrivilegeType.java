// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: milvus.proto
package io.milvus.grpc;

/**
 * Protobuf enum {@code milvus.proto.milvus.OperatePrivilegeType}
 */
public enum OperatePrivilegeType implements com.google.protobuf.ProtocolMessageEnum {

    /**
     * <code>Grant = 0;</code>
     */
    Grant(0),
    /**
     * <code>Revoke = 1;</code>
     */
    Revoke(1),
    UNRECOGNIZED(-1);

    /**
     * <code>Grant = 0;</code>
     */
    public static final int Grant_VALUE = 0;

    /**
     * <code>Revoke = 1;</code>
     */
    public static final int Revoke_VALUE = 1;

    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException("Can't get the number of an unknown enum value.");
        }
        return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static OperatePrivilegeType valueOf(int value) {
        return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static OperatePrivilegeType forNumber(int value) {
        switch (value) {
            case 0:
                return Grant;
            case 1:
                return Revoke;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<OperatePrivilegeType> internalGetValueMap() {
        return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<OperatePrivilegeType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<OperatePrivilegeType>() {

        public OperatePrivilegeType findValueByNumber(int number) {
            return OperatePrivilegeType.forNumber(number);
        }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return io.milvus.grpc.MilvusProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final OperatePrivilegeType[] VALUES = values();

    public static OperatePrivilegeType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    private final int value;

    private OperatePrivilegeType(int value) {
        this.value = value;
    }
}
