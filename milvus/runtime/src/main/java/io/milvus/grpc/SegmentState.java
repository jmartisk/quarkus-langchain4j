// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto
package io.milvus.grpc;

/**
 * Protobuf enum {@code milvus.proto.common.SegmentState}
 */
public enum SegmentState implements com.google.protobuf.ProtocolMessageEnum {

    /**
     * <code>SegmentStateNone = 0;</code>
     */
    SegmentStateNone(0),
    /**
     * <code>NotExist = 1;</code>
     */
    NotExist(1),
    /**
     * <code>Growing = 2;</code>
     */
    Growing(2),
    /**
     * <code>Sealed = 3;</code>
     */
    Sealed(3),
    /**
     * <code>Flushed = 4;</code>
     */
    Flushed(4),
    /**
     * <code>Flushing = 5;</code>
     */
    Flushing(5),
    /**
     * <code>Dropped = 6;</code>
     */
    Dropped(6),
    /**
     * <code>Importing = 7;</code>
     */
    Importing(7),
    UNRECOGNIZED(-1);

    /**
     * <code>SegmentStateNone = 0;</code>
     */
    public static final int SegmentStateNone_VALUE = 0;

    /**
     * <code>NotExist = 1;</code>
     */
    public static final int NotExist_VALUE = 1;

    /**
     * <code>Growing = 2;</code>
     */
    public static final int Growing_VALUE = 2;

    /**
     * <code>Sealed = 3;</code>
     */
    public static final int Sealed_VALUE = 3;

    /**
     * <code>Flushed = 4;</code>
     */
    public static final int Flushed_VALUE = 4;

    /**
     * <code>Flushing = 5;</code>
     */
    public static final int Flushing_VALUE = 5;

    /**
     * <code>Dropped = 6;</code>
     */
    public static final int Dropped_VALUE = 6;

    /**
     * <code>Importing = 7;</code>
     */
    public static final int Importing_VALUE = 7;

    public final int getNumber() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException("Can't get the number of an unknown enum value.");
        }
        return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SegmentState valueOf(int value) {
        return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static SegmentState forNumber(int value) {
        switch (value) {
            case 0:
                return SegmentStateNone;
            case 1:
                return NotExist;
            case 2:
                return Growing;
            case 3:
                return Sealed;
            case 4:
                return Flushed;
            case 5:
                return Flushing;
            case 6:
                return Dropped;
            case 7:
                return Importing;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SegmentState> internalGetValueMap() {
        return internalValueMap;
    }

    private static final com.google.protobuf.Internal.EnumLiteMap<SegmentState> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<SegmentState>() {

        public SegmentState findValueByNumber(int number) {
            return SegmentState.forNumber(number);
        }
    };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
        return io.milvus.grpc.CommonProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final SegmentState[] VALUES = values();

    public static SegmentState valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
    }

    private final int value;

    private SegmentState(int value) {
        this.value = value;
    }
}
