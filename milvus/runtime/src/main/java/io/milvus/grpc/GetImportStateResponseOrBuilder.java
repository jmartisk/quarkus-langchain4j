// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: milvus.proto
package io.milvus.grpc;

public interface GetImportStateResponseOrBuilder extends // @@protoc_insertion_point(interface_extends:milvus.proto.milvus.GetImportStateResponse)
        com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.milvus.proto.common.Status status = 1;</code>
     *
     * @return Whether the status field is set.
     */
    boolean hasStatus();

    /**
     * <code>.milvus.proto.common.Status status = 1;</code>
     *
     * @return The status.
     */
    io.milvus.grpc.Status getStatus();

    /**
     * <code>.milvus.proto.common.Status status = 1;</code>
     */
    io.milvus.grpc.StatusOrBuilder getStatusOrBuilder();

    /**
     * <pre>
     * is this import task finished or not
     * </pre>
     *
     * <code>.milvus.proto.common.ImportState state = 2;</code>
     *
     * @return The enum numeric value on the wire for state.
     */
    int getStateValue();

    /**
     * <pre>
     * is this import task finished or not
     * </pre>
     *
     * <code>.milvus.proto.common.ImportState state = 2;</code>
     *
     * @return The state.
     */
    io.milvus.grpc.ImportState getState();

    /**
     * <pre>
     * if the task is finished, this value is how many rows are imported. if the task is not finished, this value is how many rows are parsed. return 0 if failed.
     * </pre>
     *
     * <code>int64 row_count = 3;</code>
     *
     * @return The rowCount.
     */
    long getRowCount();

    /**
     * <pre>
     * auto generated ids if the primary key is autoid
     * </pre>
     *
     * <code>repeated int64 id_list = 4;</code>
     *
     * @return A list containing the idList.
     */
    java.util.List<java.lang.Long> getIdListList();

    /**
     * <pre>
     * auto generated ids if the primary key is autoid
     * </pre>
     *
     * <code>repeated int64 id_list = 4;</code>
     *
     * @return The count of idList.
     */
    int getIdListCount();

    /**
     * <pre>
     * auto generated ids if the primary key is autoid
     * </pre>
     *
     * <code>repeated int64 id_list = 4;</code>
     *
     * @param index The index of the element to return.
     * @return The idList at the given index.
     */
    long getIdList(int index);

    /**
     * <pre>
     * more information about the task, progress percent, file path, failed reason, etc.
     * </pre>
     *
     * <code>repeated .milvus.proto.common.KeyValuePair infos = 5;</code>
     */
    java.util.List<io.milvus.grpc.KeyValuePair> getInfosList();

    /**
     * <pre>
     * more information about the task, progress percent, file path, failed reason, etc.
     * </pre>
     *
     * <code>repeated .milvus.proto.common.KeyValuePair infos = 5;</code>
     */
    io.milvus.grpc.KeyValuePair getInfos(int index);

    /**
     * <pre>
     * more information about the task, progress percent, file path, failed reason, etc.
     * </pre>
     *
     * <code>repeated .milvus.proto.common.KeyValuePair infos = 5;</code>
     */
    int getInfosCount();

    /**
     * <pre>
     * more information about the task, progress percent, file path, failed reason, etc.
     * </pre>
     *
     * <code>repeated .milvus.proto.common.KeyValuePair infos = 5;</code>
     */
    java.util.List<? extends io.milvus.grpc.KeyValuePairOrBuilder> getInfosOrBuilderList();

    /**
     * <pre>
     * more information about the task, progress percent, file path, failed reason, etc.
     * </pre>
     *
     * <code>repeated .milvus.proto.common.KeyValuePair infos = 5;</code>
     */
    io.milvus.grpc.KeyValuePairOrBuilder getInfosOrBuilder(int index);

    /**
     * <pre>
     * id of an import task
     * </pre>
     *
     * <code>int64 id = 6;</code>
     *
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * collection ID of the import task.
     * </pre>
     *
     * <code>int64 collection_id = 7;</code>
     *
     * @return The collectionId.
     */
    long getCollectionId();

    /**
     * <pre>
     * a list of segment IDs created by the import task.
     * </pre>
     *
     * <code>repeated int64 segment_ids = 8;</code>
     *
     * @return A list containing the segmentIds.
     */
    java.util.List<java.lang.Long> getSegmentIdsList();

    /**
     * <pre>
     * a list of segment IDs created by the import task.
     * </pre>
     *
     * <code>repeated int64 segment_ids = 8;</code>
     *
     * @return The count of segmentIds.
     */
    int getSegmentIdsCount();

    /**
     * <pre>
     * a list of segment IDs created by the import task.
     * </pre>
     *
     * <code>repeated int64 segment_ids = 8;</code>
     *
     * @param index The index of the element to return.
     * @return The segmentIds at the given index.
     */
    long getSegmentIds(int index);

    /**
     * <pre>
     * timestamp when the import task is created.
     * </pre>
     *
     * <code>int64 create_ts = 9;</code>
     *
     * @return The createTs.
     */
    long getCreateTs();
}
